<Window x:Class="LicenseController.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:wpfExample="clr-namespace:MaterialDesignColors.WpfExample"
        xmlns:domain="clr-namespace:MaterialDesignColors.WpfExample.Domain"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:MaterialDesignDemo.Model"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
         Title="AutoCad Lisans Kontrol"
    WindowStartupLocation="CenterScreen" WindowState="Maximized"
        xmlns:materialDesignDemo="clr-namespace:MaterialDesignDemo"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:domain1="clr-namespace:MaterialDesignDemo.Domain"
        xmlns:local="clr-namespace:LicenseController"
        mc:Ignorable="d"
        xmlns:loginpage ="clr-namespace:MaterialDesignColors.WpfExample"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource MaterialDesignFont}"
        Icon="img/rsz_autocadicon.png"
        >
    <Window.Resources>

        <ResourceDictionary >

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- data template used for the dialogs example, defines a View for a ViewModel of type DateTime  -->
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock>England win the World Cup:</TextBlock>
                    <TextBlock Margin="0 8 0 0" Text="{Binding }" />
                    <TextBlock Margin="0 8 0 0" >You will never see that again.</TextBlock>
                    <Button  Margin="0 8 0 0" IsDefault="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Style="{DynamicResource MaterialDesignFlatButton}">AWESOME</Button>
                </StackPanel>
            </DataTemplate>
            <BooleanToVisibilityConverter x:Key="Converter" />
            <converters:BoolInverter x:Key="BoolInverter"/>
        </ResourceDictionary>

    </Window.Resources>
    <Grid>
        <materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                <!--<materialDesign:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="212">
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Right" Margin="16"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                        <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="{Binding SelectedIndex}" SelectionChanged="DemoItemsListBox_SelectionChanged"                      
                             ItemsSource="{Binding DemoItems,Mode=TwoWay}"
                             PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="domain:DemoItem">
                                    <TextBlock Text="{Binding Name}" Margin="32 0 32 0" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>-->
                <DockPanel>
                    <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                            Mode="PrimaryMid" DockPanel.Dock="Top">
                        <DockPanel>
                            <!--<ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                        x:Name="MenuToggleButton"/>-->
                            <!--<materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                                <StackPanel>
                                    --><!--<Button Content="Hello World" Click="MenuPopupButton_OnClick"/>
                                <Button Content="Nice Popup" Click="MenuPopupButton_OnClick"/>--><!--
                                    <Button Content="Sign Out" Click="Button_Click" />
                                    --><!--<Separator/>-->
                                    <!--<Button Content="Goodbye" Click="MenuPopupButton_OnClick"/>--><!--
                                </StackPanel>
                            </materialDesign:PopupBox>-->
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22"></TextBlock>
                        </DockPanel>
                    </materialDesign:ColorZone>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--<domain1:DocumentationLinks DataContext="{Binding ElementName=DemoItemsListBox, Path=SelectedItem}"
                                                Margin="0 0 0 16"
                                                />-->
                        <ContentControl Name="contentControlArea" Margin="16" Content="{Binding DemoItem.Content,Mode=TwoWay}"
                                    Grid.Row="1" />
                        <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}" x:Name="MainSnackbar" Grid.Row="1" />
                    </Grid>
                </DockPanel>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>

        <Grid VerticalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <materialDesign:Snackbar Name="Notification"  >
                <materialDesign:SnackbarMessage Name="notificationContent" ActionContent="Remove" ActionClick="SnackbarMessage_HideSnackClick" />
            </materialDesign:Snackbar>

            <GroupBox Grid.Row="1" Header="Login" Style="{DynamicResource MaterialDesignCardGroupBox}" Width="300" Height="200" VerticalAlignment="Top">
                <GroupBox.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ImageArea" Height="32" Width="32" VerticalAlignment="Center" />
                            <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding}"/>
                        </StackPanel>
                    </DataTemplate>
                </GroupBox.HeaderTemplate>


                <StackPanel Grid.Column="0">
                    <materialDesign:PackIcon  Kind="Account" Foreground="{Binding BorderBrush, ElementName=NameTextBox}" />
                    <TextBox 
                                            x:Name="NameTextBox"
                                            materialDesign:HintAssist.Hint="Name" >
                    </TextBox>

                    <materialDesign:PackIcon Kind="Key" Foreground="{Binding BorderBrush, ElementName=PasswordBox}" HorizontalAlignment="Left" />
                    <PasswordBox 		
                                            x:Name="PasswordBox"
                                            PasswordChanged="PasswordBox_PasswordChanged"
                                            materialDesign:HintAssist.Hint="Password"  />


                    <Button Grid.Column="2" Style="{StaticResource MaterialDesignRaisedDarkButton}"  
                                            Click="Button_Click"  Content="Sign in " VerticalAlignment="Top" Margin="3"/>
                </StackPanel>



            </GroupBox>
        </Grid>
    </Grid>
</Window>
