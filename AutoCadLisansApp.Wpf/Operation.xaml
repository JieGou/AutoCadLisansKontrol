<UserControl  x:Class="MaterialDesignDemo.Operation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MaterialDesignDemo"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain1="clr-namespace:MaterialDesignDemo.Domain"
             mc:Ignorable="d" 
            >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type Viewbox}">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="0 0 8 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type materialDesign:PackIcon}" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="4 0 4 0" />
            </Style>

            <DropShadowEffect x:Key="z-depth4" BlurRadius="25" ShadowDepth="8" Direction="270" Color="#BBBBBB"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer Name="scrollViewer" MouseWheel="scrollViewer_MouseWheel">

        <StackPanel Orientation="Horizontal">
            <StackPanel Background="#EEEEEE" >
                <Border Effect="{StaticResource z-depth4}"  Background="White"  >
                    <materialDesign:Card Background="#adadad"
                  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                 >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Margin="16 16 16 4" Style="{StaticResource MaterialDesignHeadlineTextBlock}" Text="{Binding SelectedFirm.Name}">
                            </TextBlock>
                            <Separator Grid.Row="1" Style="{StaticResource MaterialDesignDarkSeparator}"/>
                            <TextBlock Grid.Row="2" Margin="16 0 16 8" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Operation.Name}"></TextBlock>
                            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="16 0 16 8" HorizontalAlignment="Right">
                                <Button HorizontalAlignment="Right" Style="{StaticResource MaterialDesignToolForegroundButton}" Width="30" Padding="2 0 2 0"
                            materialDesign:RippleAssist.IsCentered="True">
                                    <materialDesign:PackIcon Kind="AccountKey" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </materialDesign:Card>
                </Border>
            </StackPanel>
            <StackPanel Orientation="Vertical">
                <StackPanel>
                    <materialDesign:Chip Content="Back"  Click="Chip_Click"
                             Margin="16" >
                        <materialDesign:Chip.Icon>
                            <materialDesign:PackIcon Kind="KeyboardBackspace" />
                        </materialDesign:Chip.Icon>
                    </materialDesign:Chip>
                </StackPanel>

                <materialDesign:Snackbar IsActive="{Binding NotificationIsVisible,Mode=TwoWay}"  
                                              x:Name="NotificationSnackbar" >
                    <materialDesign:SnackbarMessage  Content="{Binding NotificationContent,Mode=TwoWay}" ActionContent="Remove" ActionClick="SnackbarMessage_HideSnackClick" />
                </materialDesign:Snackbar>
                <GroupBox   Style="{DynamicResource MaterialDesignCardGroupBox}" Margin="16,0,16,16">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ImageArea" Height="32" Width="32" VerticalAlignment="Center" />
                            <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="Operation List" FontWeight="Bold" Foreground="White"/>
                            <StackPanel Orientation="Horizontal">
                                <Button Style="{StaticResource MaterialDesignRaisedAccentButton}" Margin="8" Width="134"
                     Command="{Binding AddItemClicked}" Content="New Operation"/>
                                <Button Style="{StaticResource MaterialDesignRaisedAccentButton}" Margin="8" Width="100"
                     Command="{Binding SaveClicked}" Content="Save"/>
                                <Button Style="{StaticResource MaterialDesignRaisedAccentButton}" Margin="8" Width="100"
                     Command="{Binding RefreshClicked}" Content="Refresh"/>
                            </StackPanel>
                        </StackPanel>

                    </GroupBox.Header>

                    <DataGrid  Margin="0 8 0 0" x:Name="grdOperation" ItemsSource="{Binding Operation, Mode=TwoWay}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" Width="829">
                        <DataGrid.Columns>
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Id, Mode=TwoWay}" 
                                            Header="Id"
                                 EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                            />
                            <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->

                            <DataGridTemplateColumn  Header="Name" Width="125">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Grid.Row="1" Grid.Column="1" 
				    x:Name="NameTextBox"
				    materialDesign:HintAssist.Hint="Name">
                                            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                            <materialDesign:MaterialDataGridTextColumn Header="Firm"        
                                                                   Binding="{Binding Firm.Name}"
                                                                   IsReadOnly="True"
                                                                   EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                        />

                            <DataGridTemplateColumn Header="CheckLicense">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>

                                        <Button Click="CheckLicenseButton_Click" CommandParameter="{Binding Id}" 
                                                    Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 0 8 0" Width="70" ToolTip="Start Sniff"  >
                                            <materialDesign:PackIcon Kind="Run" />
                                        </Button>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTemplateColumn >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Click="DeleteButton_Click"  CommandParameter="{Binding Id}"
                                                    Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 0 8 0" ToolTip="Sil">
                                            <materialDesign:PackIcon Kind="Delete" Height="24" Width="24" />
                                        </Button>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</UserControl>
