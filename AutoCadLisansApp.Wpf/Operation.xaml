<UserControl x:Class="MaterialDesignDemo.Operation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MaterialDesignDemo"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type Viewbox}">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="0 0 8 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type materialDesign:PackIcon}" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="4 0 4 0" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer>

        <StackPanel>
            <StackPanel>
                <materialDesign:Chip Content="{Binding SelectedFirm.Name,Mode=TwoWay}"  Click="Chip_Click"
                             Icon="F" 
                             Margin="0 0 4 4" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0 0 8 0" Width="134"
                     Command="{Binding AddItemClicked}">
                    New Operation
                </Button>
                <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0 0 8 0" Width="100"
                     Command="{Binding SaveClicked}">
                    Save
                </Button>
                <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0 0 8 0" Width="100"
                     Command="{Binding RefreshClicked}">
                    Refresh
                </Button>
            </StackPanel>
            <materialDesign:Snackbar IsActive="{Binding NotificationIsVisible,Mode=TwoWay}"  
                                              x:Name="NotificationSnackbar" >
                <materialDesign:SnackbarMessage  Content="{Binding NotificationContent,Mode=TwoWay}" ActionContent="Remove" ActionClick="SnackbarMessage_HideSnackClick" />
            </materialDesign:Snackbar>
            <GroupBox Grid.Column="0" Grid.Row="0" Header="Operasyon Listesi" Margin="16">

                
                <DataGrid  Margin="0 8 0 0" Name="grdOperation" ItemsSource="{Binding Operation,Mode=TwoWay}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                    <DataGrid.Columns>
                        <materialDesign:MaterialDataGridTextColumn Binding="{Binding Id,Mode=TwoWay}" 
                                            Header="Id"
                                 EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                            >

                        </materialDesign:MaterialDataGridTextColumn>
                        <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                        <materialDesign:MaterialDataGridTextColumn Binding="{Binding Name}"
                                                               Header="Name"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />


                        <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                        <materialDesign:MaterialDataGridTextColumn Header="Firm"        
                                                                   Binding="{Binding Firm.Name}"
                                                                   IsReadOnly="True"
                                                                   EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                        />


                        <DataGridTemplateColumn Header="CheckLicense">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>

                                    <Button Click="CheckLicenseButton_Click" CommandParameter="{Binding Id}"
                                                    Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 0 8 0" Width="70" ToolTip="Resource name: MaterialDesignRaisedButton">
                                                              Run
                                             </Button>
                                 
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTemplateColumn >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Click="DeleteButton_Click"  CommandParameter="{Binding Id}"
                                                    Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 0 8 0" ToolTip="Sil">
                                        <materialDesign:PackIcon Kind="Delete" Height="24" Width="24" />
                                    </Button>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
        </StackPanel>
    </ScrollViewer>
</UserControl>
