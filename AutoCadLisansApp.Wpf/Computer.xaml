<UserControl x:Class="MaterialDesignColors.WpfExample.Computer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain1="clr-namespace:MaterialDesignDemo.Domain"
             xmlns:local="clr-namespace:MaterialDesignColors.WpfExample.Domain"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="Converter" />
        </ResourceDictionary>
        
    </UserControl.Resources>

    <ScrollViewer>

        <StackPanel>
          
                <StackPanel>
                <materialDesign:Chip Content="{Binding Firm.Name}" 
                             Icon="F" 
                             Click="Chip_Click"
                             Margin="0 0 4 4" />
                
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0 0 8 0" Width="190" IsEnabled="{Binding IsButtonEnable}"
                     Command="{Binding buttonClicked}">
                Generate From Network
            </Button>
                <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0 0 8 0" Width="120" IsEnabled="{Binding IsButtonEnable}"
                     Command="{Binding AddItemClicked}">
                Add Item
            </Button>
                <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0 0 8 0" Width="155" IsEnabled="{Binding IsButtonEnable}"
                     Command="{Binding LoadDbClicked}">
                LoadFromDb
            </Button>
                <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0 0 8 0" Width="155" IsEnabled="{Binding IsButtonEnable}"
                     Command="{Binding SaveClicked}">
                    Save
                </Button>
            </StackPanel>
           
            
            <ProgressBar IsIndeterminate="True" Margin="24" Visibility="{Binding ProgressBar,Mode=TwoWay}"/>
           
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding TotalComputer}"></TextBlock>
            <TextBlock Text="/"></TextBlock>
            <TextBlock Text="{Binding ExecutedComputer}"></TextBlock>
               
            </StackPanel>
            <materialDesign:Snackbar IsActive="{Binding NotificationIsVisible,Mode=TwoWay}"   
                                              x:Name="NotificationSnackbar" >
                <materialDesign:SnackbarMessage  Content="{Binding NotificationContent,Mode=TwoWay}" ActionContent="Remove" ActionClick="SnackbarMessage_HideSnackClick" />
            </materialDesign:Snackbar>
            <GroupBox  Header="Bilgisayar Listesi" Margin="16">

                <DataGrid  Margin="0 8 0 0" Name="grdComputer" ItemsSource="{Binding Computers,Mode=TwoWay}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding IsRootMachine}" 
                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                            >
                            <DataGridCheckBoxColumn.Header>
                                <!--padding to allow hit test to pass thru for sorting -->
                                <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                                    <CheckBox HorizontalAlignment="Center"                                               
                                          DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                          IsChecked="{Binding IsAllItems3Selected}" />
                                </Border>
                            </DataGridCheckBoxColumn.Header>
                        </DataGridCheckBoxColumn>
                    
                        <materialDesign:MaterialDataGridTextColumn Binding="{Binding Id,Mode=TwoWay}" 
                                            Header="Id"
                                 EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                            ></materialDesign:MaterialDataGridTextColumn>
                            
                            

                        <DataGridTemplateColumn Header="Ip" Width="SizeToCells">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Grid.Row="1" Grid.Column="1" 
				    x:Name="NameTextBox"
				    materialDesign:HintAssist.Hint="Ip">
                                        <TextBox.Text>
                                            <Binding Path="Ip" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                        <materialDesign:MaterialDataGridTextColumn Binding="{Binding Name,Mode=TwoWay}" Width="SizeToCells"
                                                               Header="Name"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               >
                           
                        </materialDesign:MaterialDataGridTextColumn>
                    <!-- set a max length to get an indicator in the editor -->
                        <materialDesign:MaterialDataGridTextColumn Binding="{Binding PyshicalAddress,Mode=TwoWay}" Width="SizeToCells"
                                                               Header="Fiziksel Adres"                                                        
                                                               MaxLength="255" 
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"  />
                    <!-- set a max length to get an indicator in the editor -->
                        <materialDesign:MaterialDataGridTextColumn Binding="{Binding Type,Mode=TwoWay}" Width="125"
                                                               
                                                               Header="Tip"                                                        
                                                               MaxLength="255" 
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"  />

                    <DataGridTemplateColumn Header="Statu" Width="SizeToCells" 
 IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Visibility="{Binding Visibility}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="Online">
                                    </Button>
                                
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                        <DataGridTemplateColumn >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Click="DeleteButton_Click"  CommandParameter="{Binding Ip}"
                                                    Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 0 8 0" ToolTip="Sil">
                                        <materialDesign:PackIcon Kind="Delete" Height="24" Width="24" />
                                    </Button>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTemplateColumn Header="Progress" Width="SizeToCells">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <materialDesign:Card UniformCornerRadius="14"
                      VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12 12 12 12">
                                        <materialDesign:Card.Visibility>
                                            <Binding Path="IsProgressVisibility" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </materialDesign:Card.Visibility>
                                        <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"  Visibility="{Binding Path=IsProgress, Converter={StaticResource Converter}}" Value="50" IsIndeterminate="True"  >
                                        </ProgressBar>
                                    </materialDesign:Card>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                    <!--<materialDesign:MaterialDataGridComboBoxColumn Header="Food"        
                                                                   SelectedValueBinding="{Binding Food}"-->
                    <!--ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}" />-->
                </DataGrid.Columns>
            </DataGrid>
            </GroupBox>
        </StackPanel>
    </ScrollViewer>
</UserControl>
