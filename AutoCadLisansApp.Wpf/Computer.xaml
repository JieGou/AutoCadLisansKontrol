<UserControl x:Class="MaterialDesignColors.WpfExample.Computer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain1="clr-namespace:MaterialDesignDemo.Domain"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:MaterialDesignDemo.Model"
             mc:Ignorable="d" >

    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="Converter" />
            <converters:BoolInverter x:Key="BoolInverter"/>
            <DropShadowEffect x:Key="z-depth4" BlurRadius="25" ShadowDepth="8" Direction="270" Color="#BBBBBB"/>
            <Style x:Key="FocusVisual2">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

    </UserControl.Resources>

    <ScrollViewer Name="scrollViewer" MouseWheel="scrollViewer_MouseWheel">

        <StackPanel Orientation="Horizontal">
            <StackPanel Background="#EEEEEE" >
                <Border Effect="{StaticResource z-depth4}"  Background="White"  >
                    <materialDesign:Card Background="#adadad"
                  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                 >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Margin="16 16 16 4" Style="{StaticResource MaterialDesignHeadlineTextBlock}" Text="{Binding Firm.Name}">
                            </TextBlock>
                            <Separator Grid.Row="1" Style="{StaticResource MaterialDesignDarkSeparator}"/>
                            <TextBlock Grid.Row="2" Margin="16 0 16 8" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Firm.CheckDate}"></TextBlock>
                            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="16 0 16 8" HorizontalAlignment="Right">
                                <Button HorizontalAlignment="Right" Style="{StaticResource MaterialDesignToolForegroundButton}" Width="30" Padding="2 0 2 0"
                            materialDesign:RippleAssist.IsCentered="True">
                                    <materialDesign:PackIcon Kind="AccountKey" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </materialDesign:Card>
                </Border>
            </StackPanel>
            <StackPanel>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

              
                <StackPanel Grid.Row="0" Grid.Column="0">
                <ProgressBar  IsIndeterminate="True" Margin="16 0 0 0" Visibility="{Binding ProgressBar,Mode=TwoWay}"/>

                <materialDesign:Chip Content="Back" 
                             Click="Chip_Click"
                             Margin="16 2" >
                        <materialDesign:Chip.Icon>
                            <materialDesign:PackIcon Kind="KeyboardBackspace" />
                        </materialDesign:Chip.Icon>
                    </materialDesign:Chip>
                    <materialDesign:Snackbar IsActive="{Binding NotificationIsVisible,Mode=TwoWay}" x:Name="NotificationSnackbar" >
                        <materialDesign:SnackbarMessage  Content="{Binding NotificationContent,Mode=TwoWay}" ActionContent="Remove" ActionClick="SnackbarMessage_HideSnackClick" />
                    </materialDesign:Snackbar>
                </StackPanel>
                

                
               
                <GroupBox Grid.Column="0" Grid.Row="1"  Header="Manage Computer" Style="{DynamicResource MaterialDesignCardGroupBox}" Margin="16,0,16,16">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="ImageArea" Height="32" Width="32" VerticalAlignment="Center" />
                                <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding}"/>
                            </StackPanel>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <Grid Margin="0,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition  Width="*"  />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition  Width="*"  />
                            <ColumnDefinition  Width="*"  />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8" Width="190" IsEnabled="{Binding IsButtonEnable}"
                     Command="{Binding Path=buttonClicked}">
                                Generate From Network
                            </Button>
                            <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8" Width="120" IsEnabled="{Binding IsButtonEnable}"
                     Command="{Binding AddItemClicked}">
                                Add Item
                            </Button>
                            <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8" Width="155" IsEnabled="{Binding IsButtonEnable}"
                     Command="{Binding LoadDbClicked}">
                                LoadFromDb
                            </Button>
                            <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8" Width="155" IsEnabled="{Binding IsButtonEnable}"
                     Command="{Binding SaveClicked}">
                                Save
                            </Button>
                            <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8" Width="155" IsEnabled="{Binding Path=IsButtonEnable, Converter={StaticResource BoolInverter}}"
                     Command="{Binding CancelClicked}">
                                Cancel
                            </Button>
                        </StackPanel>

                        <CheckBox Grid.Row="2" Grid.ColumnSpan="4"
                  x:Name="ClassicModeCheckBox"
                  IsThreeState="False" IsChecked="{Binding Path=AutoSave,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                  Margin="0 8 0 0">When operation finishes, save result.</CheckBox>
                    </Grid>

                </GroupBox>
                <GroupBox Grid.Row="2" Grid.Column="0"  Style="{DynamicResource MaterialDesignCardGroupBox}"  Margin="16">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ImageArea" Height="32" Width="32" VerticalAlignment="Center"  />
                            <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="Computer List" FontWeight="Bold" Foreground="White"/>

                        </StackPanel>
                    </GroupBox.Header>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding TotalComputer}"></TextBlock>
                            <TextBlock Text="/"></TextBlock>
                            <TextBlock Text="{Binding ExecutedComputer}"></TextBlock>

                        </StackPanel>
                        <DataGrid  Margin="0 8 0 0" Name="grdComputer" ItemsSource="{Binding Computers,Mode=TwoWay}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" PreviewMouseWheel="grdComputer_PreviewMouseWheel">
                            <DataGrid.Columns>
                                <!--<DataGridCheckBoxColumn Binding="{Binding IsRootMachine}" 
                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                            >
                                    <DataGridCheckBoxColumn.Header>
                                        -->
                                <!--padding to allow hit test to pass thru for sorting -->
                                <!--
                                        <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                                            <CheckBox HorizontalAlignment="Center"                                               
                                          DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                          IsChecked="{Binding IsAllItems3Selected}" />
                                        </Border>
                                    </DataGridCheckBoxColumn.Header>
                                </DataGridCheckBoxColumn>-->

                                <materialDesign:MaterialDataGridTextColumn Binding="{Binding Id,Mode=TwoWay}" 
                                            Header="Id"
                                 EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                            ></materialDesign:MaterialDataGridTextColumn>



                                <DataGridTemplateColumn Header="Ip" Width="125">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Grid.Row="1" Grid.Column="1"  TextWrapping="Wrap"
				    x:Name="NameTextBox"
				    materialDesign:HintAssist.Hint="Ip">
                                                <TextBox.Text>
                                                    <Binding Path="Ip" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                                <materialDesign:MaterialDataGridTextColumn Binding="{Binding Name,Mode=TwoWay}" Width="125" 
                                                               Header="Name"                                                         
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               >

                                </materialDesign:MaterialDataGridTextColumn>
                                <!-- set a max length to get an indicator in the editor -->
                                <materialDesign:MaterialDataGridTextColumn Binding="{Binding PyshicalAddress,Mode=TwoWay}" Width="125"
                                                               Header="Psyhical Address"                                                        
                                                               MaxLength="255" 
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"  />
                                <!-- set a max length to get an indicator in the editor -->
                                <materialDesign:MaterialDataGridTextColumn Binding="{Binding Type,Mode=TwoWay}" Width="125"
                                                               
                                                               Header="Tip"                                                        
                                                               MaxLength="255" 
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"  />

                                <DataGridTemplateColumn Header="Statu" Width="SizeToCells" 
 IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"  Visibility="{Binding Path=IsVisible, Converter={StaticResource Converter}}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="Online">
                                            </Button>

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Click="DeleteButton_Click"  CommandParameter="{Binding Ip}"
                                                    Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 0 8 0" ToolTip="Sil" IsEnabled="{Binding Path=IsProgress, Converter={StaticResource BoolInverter}}">
                                                <materialDesign:PackIcon Kind="Delete" Height="24" Width="24" />
                                            </Button>

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                                <DataGridTemplateColumn Header="Progress" Width="SizeToCells">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <materialDesign:Card UniformCornerRadius="14"
                      VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12 12 12 12">
                                                <materialDesign:Card.Visibility>
                                                    <Binding Path="IsProgressVisibility" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </materialDesign:Card.Visibility>
                                                <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"  Visibility="{Binding Path=IsProgress, Converter={StaticResource Converter}}" Value="50" IsIndeterminate="True"  >
                                                </ProgressBar>
                                            </materialDesign:Card>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                                <!--<materialDesign:MaterialDataGridComboBoxColumn Header="Food"        
                                                                   SelectedValueBinding="{Binding Food}"-->
                                <!--ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}" />-->
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </GroupBox>

                    <materialDesign:DialogHost DialogClosing="Sample1_DialogHost_OnDialogClosing"
                         Grid.Row="1"  Grid.Column="1"   >
                        <materialDesign:DialogHost.DialogContent>
                            <StackPanel Margin="16">
                                <TextBlock><Run Text="Add a new operation."/></TextBlock>
                                <TextBox Margin="0 8 0 0" HorizontalAlignment="Stretch" x:Name="OperationBox" />
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsDefault="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand" Content="ACCEPT">
                                        <Button.CommandParameter>
                                            <system:Boolean>True</system:Boolean>
                                        </Button.CommandParameter>
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsCancel="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand" Content="CANCEL">
                                        <Button.CommandParameter>
                                            <system:Boolean>False</system:Boolean>
                                        </Button.CommandParameter>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </materialDesign:DialogHost.DialogContent>
                        <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            ClipToBounds="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>



                                <DataGrid Name="grdOperationonComputerpage" ItemsSource="{Binding Operation, Mode=TwoWay}" CanUserAddRows="False" AutoGenerateColumns="False" Height="220" Width="298" >
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn   IsReadOnly="True" Header="Name" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap"  x:Name="NameTextBox"   materialDesign:HintAssist.Hint="OperationName">
                                                        <TextBlock.Text>
                                                            <Binding Path="Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>

                                                    <Button Click="CheckLicenseButton_Click" CommandParameter="{Binding Id}" 
                                                    Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 0 8 0" Width="70" ToolTip="Start Sniff"  >
                                                        <materialDesign:PackIcon Kind="Run" />
                                                    </Button>

                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>

                                <materialDesign:ColorZone Mode="PrimaryMid" Grid.Row="1" Effect="{DynamicResource MaterialDesignShadowDepth5}">
                                    <TextBlock Margin="16"><Run Text="Operation List"/></TextBlock>
                                </materialDesign:ColorZone>
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"                                
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                                    Grid.Row="0" Margin="0 0 28 -20">
                                    <Viewbox Width="22" Height="22">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
                                        </Canvas>
                                    </Viewbox>
                                </Button>
                            </Grid>
                        </Border>
                    </materialDesign:DialogHost>
                </Grid>
            </StackPanel>

            
        </StackPanel>
    </ScrollViewer>
</UserControl>
