<UserControl x:Class="MaterialDesignDemo.CheckLicense"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain1="clr-namespace:MaterialDesignDemo.Domain"
             mc:Ignorable="d" >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="Converter" />
            <DropShadowEffect x:Key="z-depth4" BlurRadius="25" ShadowDepth="8" Direction="270" Color="#BBBBBB"/>
            <Style TargetType="DataGridRow">
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="true">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>

    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="90*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Background="#EEEEEE" Grid.Column="0"  >

            <Border Effect="{StaticResource z-depth4}"  Background="White"  >
                <materialDesign:Card Background="#adadad"
                  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" >

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Margin="16 16 16 4" Style="{StaticResource MaterialDesignHeadlineTextBlock}" Text="{Binding Firm.Name}" TextWrapping="Wrap">
                        </TextBlock>
                        <Separator Grid.Row="1" Style="{StaticResource MaterialDesignDarkSeparator}"/>
                        <TextBlock Grid.Row="2" Margin="16 0 16 8" VerticalAlignment="Center" HorizontalAlignment="Left" TextWrapping="Wrap" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Operation.Name}"></TextBlock>
                        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="16 0 16 8" HorizontalAlignment="Right">
                            <Button HorizontalAlignment="Right" Style="{StaticResource MaterialDesignToolForegroundButton}" Width="30" Padding="2 0 2 0"
                            materialDesign:RippleAssist.IsCentered="True">
                                <materialDesign:PackIcon Kind="AccountKey" />
                            </Button>
                        </StackPanel>
                    </Grid>
                </materialDesign:Card>
            </Border>
        </StackPanel>
        <ScrollViewer Name="scrollViewer"  Grid.Column="1" MouseWheel="scrollViewer_MouseWheel"  >
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="5*" />
                    <RowDefinition Height="30*" />
                    <RowDefinition Height="30*" />
                    <RowDefinition Height="30*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="76*" />
                    <ColumnDefinition Width="24*"/>
                </Grid.ColumnDefinitions>

                <materialDesign:DialogHost DialogClosing="Sample1_DialogHost_OnDialogClosing"
                         Grid.Row="1"  Grid.Column="1"    HorizontalAlignment="Right"   Height="256" Width="256">
                    <materialDesign:DialogHost.DialogContent>
                        <StackPanel Margin="16">
                            <TextBlock><Run Text="Add a new software."/></TextBlock>
                            <TextBox Margin="0 8 0 0" HorizontalAlignment="Stretch" x:Name="SoftwareBox" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsDefault="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand" Content="ACCEPT">
                                    <Button.CommandParameter>
                                        <system:Boolean>True</system:Boolean>
                                    </Button.CommandParameter>
                                </Button>
                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsCancel="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand" Content="CANCEL">
                                    <Button.CommandParameter>
                                        <system:Boolean>False</system:Boolean>
                                    </Button.CommandParameter>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </materialDesign:DialogHost.DialogContent>
                    <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            MinWidth="256" MinHeight="256" ClipToBounds="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>


                            <DataGrid ItemsSource="{Binding SoftwareList,Mode=TwoWay}" CanUserAddRows="False" AutoGenerateColumns="False" Grid.Row="0" >
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn  Width="SizeToCells">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock TextWrapping="Wrap" x:Name="NameTextBox"   materialDesign:HintAssist.Hint="Name">
                                                    <TextBlock.Text>
                                                        <Binding Path="DisplayName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                            <Binding.ValidationRules>
                                                                <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                </DataGrid.Columns>
                            </DataGrid>

                            <materialDesign:ColorZone Mode="PrimaryMid" Grid.Row="1" Effect="{DynamicResource MaterialDesignShadowDepth5}">
                                <TextBlock Margin="16"><Run Text="Software list to check"/></TextBlock>
                            </materialDesign:ColorZone>
                            <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"                                
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                                    Grid.Row="0" Margin="0 0 28 -20">
                                <Viewbox Width="22" Height="22">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
                                    </Canvas>
                                </Viewbox>
                            </Button>
                        </Grid>
                    </Border>
                </materialDesign:DialogHost>


                <materialDesign:DialogHost DialogClosing="Sample1_DialogHost_OnDialogClosing" VerticalAlignment="Top"
                         Grid.Row="2"  Grid.Column="1"    HorizontalAlignment="Right"   Height="256" Width="256">

                    <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            MinWidth="256" MinHeight="256" ClipToBounds="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition  Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <DataGrid ItemsSource="{Binding CheckList,Mode=TwoWay}" CanUserAddRows="False" AutoGenerateColumns="False" Grid.Row="0" >
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn  Width="SizeToCells">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock TextWrapping="Wrap"  x:Name="NameTextBox"   materialDesign:HintAssist.Hint="Name">
                                                    <TextBlock.Text>
                                                        <Binding Path="Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                            <Binding.ValidationRules>
                                                                <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn  Width="SizeToCells" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <ToggleButton  Grid.Column="1" Grid.Row="3" Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" VerticalAlignment="Center" Margin="8 0 0 0" HorizontalAlignment="Center"
                                                                   IsChecked="{Binding Path=WillChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ></ToggleButton>
                                                </StackPanel>
                                            </DataTemplate>

                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                </DataGrid.Columns>
                            </DataGrid>
                            
                            <materialDesign:ColorZone Mode="PrimaryMid" Grid.Row="1"  Effect="{DynamicResource MaterialDesignShadowDepth5}">
                                <TextBlock Margin="16"><Run Text="Select control points"/></TextBlock>
                            </materialDesign:ColorZone>
                        </Grid>
                    </Border>
                </materialDesign:DialogHost>

                <StackPanel Grid.Row="0" Grid.Column="0">
                    <materialDesign:Chip Content="Back"
                             
                             Click="Chip_Click"
                             Margin="16 2" >
                        <materialDesign:Chip.Icon>
                            <materialDesign:PackIcon Kind="KeyboardBackspace" />
                        </materialDesign:Chip.Icon>
                    </materialDesign:Chip>
                    <materialDesign:Snackbar IsActive="{Binding NotificationIsVisible,Mode=TwoWay}"  
                                              x:Name="NotificationSnackbar"  >
                        <materialDesign:SnackbarMessage  Content="{Binding NotificationContent,Mode=TwoWay}" ActionContent="Remove" ActionClick="SnackbarMessage_HideSnackClick" />
                    </materialDesign:Snackbar>

                    <ProgressBar  IsIndeterminate="True" Margin="22,24,10,18" Visibility="{Binding ProgressBar,Mode=TwoWay}" />

                </StackPanel>
                <GroupBox Grid.Column="0" Grid.Row="1"  Header="Start Sniffing" Style="{DynamicResource MaterialDesignCardGroupBox}" Margin="16,0,16,16">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="ImageArea" Height="32" Width="32" VerticalAlignment="Center" />
                                <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding}"/>
                            </StackPanel>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <Grid Margin="0,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition  Width="*"  />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition  Width="*"  />
                            <ColumnDefinition  Width="*"  />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0">
                            <materialDesign:PackIcon  Kind="Account" Foreground="{Binding BorderBrush, ElementName=NameTextBox}" />
                            <TextBox 
                                            x:Name="NameTextBox"
                                            materialDesign:HintAssist.Hint="Name" >
                                <Binding Path="UserName" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                    <Binding.ValidationRules>
                                        <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Grid.Column="1" >
                            <materialDesign:PackIcon Kind="Key" Foreground="{Binding BorderBrush, ElementName=PasswordBox}" HorizontalAlignment="Left" />
                            <PasswordBox 		
                                            x:Name="PasswordBox"
                                            PasswordChanged="PasswordBox_PasswordChanged"
                                            materialDesign:HintAssist.Hint="Password"  />
                        </StackPanel>
                        <Button Grid.Column="2" Style="{StaticResource MaterialDesignRaisedDarkButton}" 
                                            Command="{Binding RunClicked}" CommandParameter="{Binding ElementName=PasswordBox}" Content="Run" IsEnabled="{Binding IsButtonEnable,Mode=TwoWay}"  VerticalAlignment="Top" Margin="3"/>
                        <Button Grid.Column="3" Style="{StaticResource MaterialDesignRaisedDarkButton}" 
                                            Command="{Binding SaveClicked}" Content="Save" VerticalAlignment="Top" Margin="3" IsEnabled="{Binding IsButtonEnable,Mode=TwoWay}"/>
                        <Button  Grid.Column="4" Style="{StaticResource MaterialDesignRaisedDarkButton}" 
                                            Command="{Binding CancelClicked}" Content="Cancel" VerticalAlignment="Top" IsEnabled="{Binding !(IsButtonEnable),Mode=TwoWay}" Margin="3"/>

                    </Grid>
                </GroupBox>







                <GroupBox Grid.Row="2" Grid.Column="0"  Header="Check List" Style="{DynamicResource MaterialDesignCardGroupBox}" Margin="16,1,16,-1" Grid.RowSpan="2">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="ImageArea" Height="32" Width="32" VerticalAlignment="Center" />
                                <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding}"/>
                            </StackPanel>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <Grid VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                            <TextBlock  Text="{Binding TotalComputer}"></TextBlock>
                            <TextBlock  Text="/"></TextBlock>
                            <TextBlock  Text="{Binding ExecutedComputer}"></TextBlock>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button   Style="{StaticResource MaterialDesignFloatingActionAccentButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Right" Command="{Binding ExporttoExcel}"
                        ToolTip="Export to Excel" Click="Button_Click">
                                <materialDesign:PackIcon Kind="FileExcel" Height="24" Width="24" />
                            </Button>
                            <Button  Style="{StaticResource MaterialDesignFloatingActionAccentButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Right"  Command="{Binding ExporttoPdf}"
                        ToolTip="Export to Pdf">
                                <materialDesign:PackIcon Kind="FilePdf" Height="24" Width="24" />
                            </Button>
                        </StackPanel>

                        <DataGrid Grid.Row="1" Grid.ColumnSpan="2"  Margin="0 8 0 0" Name="grdCheckList" ItemsSource="{Binding CheckLicenses,Mode=TwoWay}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                            <DataGrid.Columns>

                                <materialDesign:MaterialDataGridTextColumn Binding="{Binding ComputerId,Mode=TwoWay}" 
                                            Header="Id"  Width="SizeToCells"
                                 EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                            ></materialDesign:MaterialDataGridTextColumn>


                                <DataGridTemplateColumn Header="Ip" Width="SizeToCells">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  x:Name="NameTextBox"   materialDesign:HintAssist.Hint="Ip">
                                                <TextBox.Text>
                                                    <Binding Path="Ip" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                                <DataGridTemplateColumn Header="Name" Width="SizeToCells">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  x:Name="NameTextBox"   materialDesign:HintAssist.Hint="Ip">
                                                <TextBox.Text>
                                                    <Binding Path="Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                                <DataGridTemplateColumn Header="Output" Width="SizeToCells" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                            materialDesign:DialogHost.DialogClosingAttached="Sample2_DialogHost_OnDialogClosing" ToolTip="Output"
                            Width="128">
                                                <Button.CommandParameter>
                                                    <ScrollViewer>
                                                        <StackPanel>
                                                            <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True" 
                                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                        CommandParameter="Sample2Cancel"
                                        HorizontalAlignment="Center">CLOSE</Button>
                                                            <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True" 
                                        Click="OutputButton_Click"
                                        CommandParameter="{Binding Output}"
                                        HorizontalAlignment="Center">DOWNLOAD</Button>
                                                            <StackPanel>
                                                                <TextBlock  HorizontalAlignment="Center" TextWrapping="Wrap" Grid.Column="1" Text="{Binding Output,Mode=TwoWay}"></TextBlock>
                                                            </StackPanel>


                                                        </StackPanel>
                                                    </ScrollViewer>
                                                </Button.CommandParameter>
                                                <materialDesign:PackIcon Kind="FileOutline" />
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="IsFound" Width="SizeToCells" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Visibility="{Binding Path=IsFound, Converter={StaticResource Converter},Mode=TwoWay}" Margin="0 0 8 0" HorizontalAlignment="Left" ToolTip="Found"></Button>
                                            </StackPanel>
                                        </DataTemplate>

                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                                <DataGridTemplateColumn Header="State" Width="SizeToCells" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Visibility="{Binding Path=Success, Converter={StaticResource Converter},Mode=TwoWay}" Margin="0 0 8 0" HorizontalAlignment="Left" ToolTip="Success"></Button>
                                                <Button Background="Red"  Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Visibility="{Binding Path=Fail, Converter={StaticResource Converter},Mode=TwoWay}" Margin="0 0 8 0" HorizontalAlignment="Left" ToolTip="Fail"></Button>
                                            </StackPanel>
                                        </DataTemplate>

                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>



                                <DataGridTemplateColumn Header="Progress" Width="SizeToCells">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <materialDesign:Card UniformCornerRadius="14"
                      VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12 12 12 12">
                                                <materialDesign:Card.Visibility>
                                                    <Binding Path="IsProgressVisibility" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <domain1:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </materialDesign:Card.Visibility>
                                                <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"  Visibility="{Binding Path=IsProgress, Converter={StaticResource Converter}}" Value="50" IsIndeterminate="True"  >
                                                </ProgressBar>
                                            </materialDesign:Card>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                                <!--<materialDesign:MaterialDataGridComboBoxColumn Header="Food"        
                                                                   SelectedValueBinding="{Binding Food}"-->
                                <!--ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}" />-->
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </GroupBox>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
